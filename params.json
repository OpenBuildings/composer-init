{"name":"composer-init","tagline":"Initialize a composer package based on a template package","body":"Composer Init\r\n=============\r\n\r\n[![Build Status](https://travis-ci.org/clippings/composer-init.png?branch=master)](https://travis-ci.org/clippings/composer-init)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/clippings/composer-init/badges/quality-score.png?s=a1404674f68c4894d651150caf4985aa59597515)](https://scrutinizer-ci.com/g/clippings/composer-init/)\r\n[![Code Coverage](https://scrutinizer-ci.com/g/clippings/composer-init/badges/coverage.png?s=3d5fb55c42c6887679915320658b543ed935e00a)](https://scrutinizer-ci.com/g/clippings/composer-init/)\r\n[![Latest Stable Version](https://poser.pugx.org/clippings/composer-init/v/stable.png)](https://packagist.org/packages/clippings/composer-init)\r\n\r\nTired of creating the same directory structure every time you start a new project? Tired of constantly modifying files if you clone github template repo? This command line tool allows you to initialize a project based on a template, and fills in values in the template.\r\n\r\nInstallation\r\n------------\r\n\r\nInstall via composer\r\n\r\n```\r\n$ composer global require clippings/composer-init\r\n```\r\n\r\nThis will install it to your user's global composer. If you already have ~/.composer/vendor/bin/ in your PATH you can start using it with\r\n```\r\n$ composer-init\r\n```\r\notherwise you can do it by calling directly\r\n```\r\n$ ~/.composer/vendor/bin/composer-init\r\n```\r\n\r\nBasic Usage\r\n-----------\r\n\r\n- ``composer-init search`` to discover templates\r\n- ``composer-init use {template-package}`` in an empty folder to use a template\r\n- ``composer-init token {token}`` set a github token for downloading past the [github rate limit](https://developer.github.com/v3/rate_limit/)\r\n\r\n`composer-init` Gets a lot of defaults from github repo & organization, so it is best to create an empty repo in github, clone it locally and run \"composer-init use ...\" there.\r\n\r\nCreating Templates\r\n------------------\r\n\r\nA composer-init template must be published to packegist, (therefore have a composer.json file) and have a prompts.json file to describe which of the available prompts will be used. The package should be published as \"type\": \"composer-init-template\". All the code for the template is present in the \"root\" directory.\r\n\r\nexample composer.json file:\r\n\r\n``` json\r\n{\r\n    \"name\": \"clippings/package-template\",\r\n    \"description\": \"Package Template\",\r\n    \"license\": \"MIT\",\r\n    \"type\": \"composer-init-template\",\r\n    \"authors\": [\r\n        {\r\n            \"name\": \"John Smith\",\r\n            \"email\": \"john@example.com\",\r\n            \"role\": \"Author\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nexample prompts.json file:\r\n\r\n``` json\r\n[\r\n    \"package_name\",\r\n    \"title\",\r\n    \"description\",\r\n    \"php_namespace\",\r\n    \"author_name\",\r\n    \"author_email\",\r\n    \"copyright\",\r\n    \"bugs\"\r\n]\r\n```\r\nThis states that this package will use these prompts, gather their input and then fill in the placeholders inside all the files in the root folder.\r\n\r\n\r\nHere's an example template:\r\nhttps://github.com/clippings/package-template/\r\n\r\nPrompts\r\n-------\r\n\r\nAll prompts try to guess a reasonable default, but ask the user to confirm/correct its value.\r\n\r\n#### author\\_email\r\n\r\nThe email of the author, by default uses `git config user.email`. You can set it yourself with `git config user.email {my email}` or globally with `git config --global user.email {my email}`. As stated in [first time git setup](https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup) guide\r\n\r\nAdds `{% author_email %}` template variable\r\n\r\n#### author\\_name\r\n\r\nThe name of the author, by default uses `git config user.name`. You can set it yourself with `git config user.name {my name}` or globally with `git config --global user.name {my name}`. As stated in [first time git setup](https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup) guide\r\n\r\nAdds `{% author_name %}` template variable\r\n\r\n#### bugs\r\n\r\nThe url for submitting new issues. By default gets the repo's gitub issues url. e.g. `https://github.com/clippings/composer-init/issues`\r\n\r\nAdds `{% bugs %}` template variable\r\n\r\n#### copyright\r\n\r\nTries to guess the copyright holder by going through\r\n\r\n- github organization\r\n- github user\r\n- git user\r\n- file owner\r\n\r\nAnd exposes it as \"{year}, {copyright\\_entity}\" - where year is the current year and copyright\\_entity is the guessed value. You can also get to the `copyright_entity` value separately\r\n\r\nAdds `{% copyright %}` template variable\r\nAdds `{% copyright_entity %}` template variable\r\n\r\n#### description\r\n\r\nThe description of the github repo.\r\n\r\nAdds `{% description %}` template variable\r\n\r\n####  package\\_name\r\n\r\nThe github package name e.g. `clippings/composer-init`\r\n\r\nAdds `{% package_name %}` template variable\r\n\r\n#### php\\_namespace\r\n\r\nTires to guess the package name, using github's organization/username and repo name. So `clippings/composer-init` would be converted to `Clippings\\ComposerInit`. It also tries to guess the name with initials, so in this case it would also give the option of `CL\\ComposerInit`. These can be cycled with tab completion or auto-completed when entering\r\n\r\nAdds `{% php_namespace %}` template variable\r\nAdds `{% php_namespace_escaped %}` template variable where all \"\\\\\" characters are converted to \"\\\\\\\\\"\r\n\r\n#### slack\\_notification\r\n\r\nGet a \"secure slack notification token\". basically asks for a value and returns \"slack:\\n    secure: {value}\\n\", so you can easily add slack to your .travis.yml notifications\r\n\r\n#### title\r\n\r\nThe title of the github repo.\r\n\r\nAdds `{% title %}` template variable\r\n\r\nCredits\r\n-------\r\n\r\nInspired by [grunt-init](https://github.com/gruntjs/grunt-init)\r\n\r\nCopyright (c) 2014-2015, Clippings Ltd. Developed by [Ivan Kerin](https://github.com/ivank) as part of [clippings.com](http://clippings.com)\r\n\r\nUnder BSD-3-Clause license, read LICENSE file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}